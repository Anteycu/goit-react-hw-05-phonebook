{"version":3,"sources":["components/ContactForm/contactForm.module.css","components/ContactListItem/contactListItem.module.css","components/Notification/notification.module.css","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Notification/Notification.js","components/PhonebookTitle/PhonebookTitle.js","helpers/checkSameContact.js","components/App.js","index.js"],"names":["module","exports","ContactListItem","text","number","onRemove","className","styles","contactsCards","contactsCardsItems","button","type","onClick","ContactList","showContactListItem","contacts","onRemoveContact","TransitionGroup","component","map","id","CSSTransition","key","timeout","classNames","ContactForm","state","name","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","container","form","onSubmit","label","inputs","onChange","placeholder","required","Component","Filter","changeFilter","Notification","Container","Message","PhonebookTitle","in","appear","unmountOnExit","checkSameContact","newContact","find","contact","App","filter","sameName","showNotification","showContactList","getVisibleContacts","toLowerCase","includes","handleAddContact","contactObj","uuidv4","prev","handlerRemoveContact","idContact","persistedTasks","localStorage","getItem","JSON","parse","prevProps","prevState","timeoutID","conacts","setItem","stringify","setTimeout","clearTimeout","visibleContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a8594c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"contactForm_container__23C-U\",\"form\":\"contactForm_form__3qQP6\",\"label\":\"contactForm_label__1O_H9\",\"inputs\":\"contactForm_inputs__7u3iK\",\"button\":\"contactForm_button__2dC66\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsCards\":\"contactListItem_contactsCards__3IdWJ\",\"contactsCardsItems\":\"contactListItem_contactsCardsItems__3jNyN\",\"button\":\"contactListItem_button__3R3ni\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"notification_Container__1BqyT\",\"Message\":\"notification_Message__20wZ2\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./contactListItem.module.css\";\r\n\r\nexport function ContactListItem({ text, number, onRemove }) {\r\n  return (\r\n    <li className={styles.contactsCards}>\r\n      <p className={styles.contactsCardsItems}>{text}:</p>\r\n      <p className={styles.contactsCardsItems}>{number}</p>\r\n      <button className={styles.button} type=\"button\" onClick={onRemove}>\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ContactListItem } from \"../ContactListItem/ContactListItem\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport \"./ContactList.css\";\r\n\r\nexport const ContactList = ({\r\n  showContactListItem,\r\n  contacts,\r\n  onRemoveContact,\r\n}) => (\r\n  <TransitionGroup component=\"ul\" className=\"ContactList\">\r\n    {contacts.map(({ id, text, number }) => (\r\n      <CSSTransition key={id} timeout={250} classNames=\"TaskListSlide\">\r\n        <ContactListItem\r\n          key={id}\r\n          text={text}\r\n          number={number}\r\n          onRemove={() => onRemoveContact(id)}\r\n        />\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./contactForm.module.css\";\r\n\r\nexport class ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAddContact(this.state.name, this.state.number);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.label}>\r\n            Name\r\n            <input\r\n              className={styles.inputs}\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n              placeholder=\"name\"\r\n              required\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            Tel.number\r\n            <input\r\n              className={styles.inputs}\r\n              type=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              name=\"number\"\r\n              placeholder=\"number\"\r\n              required\r\n            />\r\n          </label>\r\n          <button className={styles.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Filter.css\";\r\n\r\nexport function Filter({ value, changeFilter }) {\r\n  return (\r\n    <div className={\"Container\"}>\r\n      <input\r\n        className={\"FilterInput\"}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => changeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./notification.module.css\";\r\n\r\nconst Notification = ({ name }) => {\r\n  return (\r\n    <div className={styles.Container}>\r\n      <p className={styles.Message}>{`${name} is already in contacts`}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport \"./PhonebookTitle.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nexport default function PhonebookTitle() {\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames=\"TitleSlide\"\r\n      unmountOnExit\r\n    >\r\n      <div>\r\n        <h1 className={\"Title\"}>Phonebook</h1>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n}\r\n","export default function checkSameContact(newContact, contacts) {\r\n  let checkedArr = contacts.find((contact) => contact.text === newContact.text);\r\n\r\n  return checkedArr;\r\n}\r\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ContactList } from \"./ContactList/ContactList\";\nimport { ContactForm } from \"./ContactForm/ContactForm\";\nimport { Filter } from \"./Filter/Filter\";\nimport Notification from \"./Notification/Notification\";\nimport PhonebookTitle from \"./PhonebookTitle/PhonebookTitle\";\nimport checkSameContact from \"../helpers/checkSameContact\";\nimport \"./styles.css\";\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    sameName: null,\n    showNotification: false,\n    showContactList: false,\n    showContactListItem: false,\n  };\n\n  componentDidMount() {\n    const persistedTasks = localStorage.getItem(\"contacts\");\n    if (persistedTasks) {\n      this.setState({\n        contacts: JSON.parse(persistedTasks),\n        showContactList: true,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.conacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n    let timeoutID;\n    if (prevState.showNotification !== this.state.showNotification) {\n      timeoutID = setTimeout(\n        () => this.setState(() => ({ showNotification: false })),\n        3000\n      );\n    } else {\n      clearTimeout(timeoutID);\n    }\n  }\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.text.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  handleAddContact = (name, number) => {\n    const contactObj = {\n      id: uuidv4(),\n      text: name,\n      number: number,\n    };\n\n    let sameName = checkSameContact(contactObj, this.state.contacts);\n\n    if (sameName) {\n      this.setState(() => ({\n        sameName: sameName.text,\n        showNotification: true,\n      }));\n    } else {\n      this.setState((prev) => ({\n        contacts: [...prev.contacts, contactObj],\n        showContactListItem: true,\n      }));\n    }\n  };\n\n  handlerRemoveContact = (idContact) => {\n    this.setState((prev) => ({\n      contacts: prev.contacts.filter((contact) => contact.id !== idContact),\n    }));\n  };\n\n  render() {\n    const {\n      contacts,\n      filter,\n      sameName,\n      showNotification,\n      showContactList,\n      showContactListItem,\n    } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <PhonebookTitle />\n\n        <ContactForm onAddContact={this.handleAddContact} />\n\n        <CSSTransition\n          in={showNotification}\n          timeout={1000}\n          classNames=\"Fade\"\n          unmountOnExit\n        >\n          <Notification name={sameName} />\n        </CSSTransition>\n\n        <h2 className={\"Contacts\"}>Contacts</h2>\n\n        <CSSTransition\n          in={contacts.length > 1}\n          timeout={1000}\n          classNames=\"Fade\"\n          unmountOnExit\n        >\n          <Filter value={filter} changeFilter={this.changeFilter} />\n        </CSSTransition>\n\n        <CSSTransition\n          in={showContactList}\n          timeout={500}\n          classNames=\"SlideIn\"\n          unmountOnExit\n        >\n          <ContactList\n            showContactListItem={showContactListItem}\n            contacts={visibleContacts}\n            onRemoveContact={this.handlerRemoveContact}\n          />\n        </CSSTransition>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}